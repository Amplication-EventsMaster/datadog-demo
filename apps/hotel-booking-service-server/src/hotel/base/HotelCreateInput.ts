/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { FeedbackCreateNestedManyWithoutHotelsInput } from "./FeedbackCreateNestedManyWithoutHotelsInput";
import { Type } from "class-transformer";
import { RoomCreateNestedManyWithoutHotelsInput } from "./RoomCreateNestedManyWithoutHotelsInput";

@InputType()
class HotelCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackCreateNestedManyWithoutHotelsInput,
  })
  @ValidateNested()
  @Type(() => FeedbackCreateNestedManyWithoutHotelsInput)
  @IsOptional()
  @Field(() => FeedbackCreateNestedManyWithoutHotelsInput, {
    nullable: true,
  })
  feedbacks?: FeedbackCreateNestedManyWithoutHotelsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rating?: number | null;

  @ApiProperty({
    required: false,
    type: () => RoomCreateNestedManyWithoutHotelsInput,
  })
  @ValidateNested()
  @Type(() => RoomCreateNestedManyWithoutHotelsInput)
  @IsOptional()
  @Field(() => RoomCreateNestedManyWithoutHotelsInput, {
    nullable: true,
  })
  rooms?: RoomCreateNestedManyWithoutHotelsInput;
}

export { HotelCreateInput as HotelCreateInput };
